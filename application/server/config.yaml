version: 1.0.0

# GO SDK使用的客户端部分。
client:
  # 客户端所属的组织，必须是organizations定义的组织
  organization: org1
  # 日志级别
  logging:
    level: info
  # MSP证书的根路径
  cryptoconfig:
    path: 
# 通道定义
channels:
  mychannel:
    orderers:
      - orderer.example.com
    peers:
      peer0.org1.example.com:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
#      peer1.jd.com:
#        endorsingPeer: true
#        chaincodeQuery: true
#        ledgerQuery: true
#        eventSource: true

# 组织配置
# 组织配置
organizations:
  Org1:
    mspid: Org1MSP
    cryptoPath: /opt/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/
    peers:
      - peer0.org1.example.com
#      - peer1.jd.com
    users:
      Admin:
        cert:
          path: /opt/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/cacerts/localhost-7054-ca-org1.pem
        key:
          path: /opt/fabric-samples/test-network/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp/keystore/bcb6d64aa77a9fda97a884e93ebdc00e592cf10eebd5dc13b7f0dcd329fb0404_sk
  Org2:
    mspid: Org2MSP
    cryptoPath: /opt/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/
    peers:
      - peer0.org2.example.com
    users:
      Admin:
        cert:
          path: /opt/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/cacerts/localhost-8054-ca-org2.pem
        key:
          path: /opt/fabric-samples/test-network/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp/keystore/6ab1d5cd0940174c1555882fe2f7d431965f4ef149645fa0b4206b2116de6d0b_sk
orderers:
  orderer.example.com:
    url: orderer.example.com:7050
    # 传递给gRPC客户端构造函数
    grpcOptions:
      ssl-target-name-override: orderer.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: true

# peers节点列表
peers:
  # peer节点定义，可以定义多个
  peer0.org1.example.com:
    # URL用于发送背书和查询请求
    url: peer0.org1.example.com:7051
    # 传递给gRPC客户端构造函数
    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: true
#  peer1.jd.com:
#    url: peer1.jd.com:7051
#    grpcOptions:
#      ssl-target-name-override: peer1.jd.com
#      keep-alive-time: 0s
#      keep-alive-timeout: 20s
#      keep-alive-permit: false
#      fail-fast: false
#      allow-insecure: true
  peer0.org2.exmaple.com:
    url: peer0.org2.example.com:7051
    grpcOptions:
      ssl-target-name-override: peer0.org2.example.com
      keep-alive-time: 0s
      keep-alive-timeout: 20s
      keep-alive-permit: false
      fail-fast: false
      allow-insecure: true
#  peer1.taobao.com:
#    url: peer1.taobao.com:7051
#    grpcOptions:
#      ssl-target-name-override: peer1.taobao.com
#      keep-alive-time: 0s
#      keep-alive-timeout: 20s
#      keep-alive-permit: false
#      fail-fast: false
#      allow-insecure: true